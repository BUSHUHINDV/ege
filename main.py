# def f(x,n):
#     if ((n == 3 or n == 5) and x >=56 and x < 80) or ((n == 2 or n == 4) and x > 80): return True
#     elif (x > 80) or ((n == 2 or n == 4) and x>=56 and x < 80): return False
#     else:
#         if n % 2 == 0:return f(x+1,n+1) or f(x*3,n+1)
#         else: return f(x+1,n+1) and f(x*3,n+1)
#
# for s in range(1,56):
#     if f(s,1):
#         print(s)
#
# def f(x,n):
#     if ((n == 3) and x >=56 and x < 80) or ((n == 2) and x > 80): return True
#     elif (x > 80) or ((n == 2 or n == 4) and x>=56 and x < 80): return False
#     else:
#         if n % 2 == 0:return f(x+1,n+1) or f(x*3,n+1)
#         else: return f(x+1,n+1) and f(x*3,n+1)
#
# for s in range(1,56):
#     if f(s,1):
#         print(f"{s} - Лишнее ")
# import sys
#
# sys.setrecursionlimit(10000)
# def f(n):
#     if n==1:
#         return 1
#     if n>1:
#         return n*f(n-1)
#
# print(f(2023)/f(2020))
'''Задание 16 (№4704).
Алгоритм вычисления значения функции , где – натуральное число, задан
следующими соотношениями:
при ;
если .
Чему равно значение выражения ?
→Сохранить ответ
F(n) n
F(n) = 1 n = 1
F(n) = n × F(n − 1) n > 1
F(2023)/F(2020)'''
# s1=7
# n=8
# while n<=2024:
#     s1=n+1+s1
#     n+=2
# s2=7
# n=8
# while n<=2020:
#     s2=n+1+s2
#     n+=2
# print(s1-s2)
# import sys
# sys.setrecursionlimit(10000)
# def f(n):
#     if n<7:
#         return 7
#     if n>=7:
#         return n+1+f(n-2)
# print(f(2024)-f(2020))
#
# '''Задание 23 (№4709).
# Исполнитель преобразует число на экране.
# У исполнителя есть две команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Умножить на 2
# Программа для исполнителя – это последовательность команд.
# Сколько существует программ, для которых при исходном числе 1 результатом
# является число 35, при этом траектория вычислений содержит число 10 и не содержит
# 17?
# Траектория вычислений программы – это последовательность результатов
# выполнения всех команд программы. Например, для программы 121 при исходном
# числе 7 траектория будет состоять из чисел 8, 16, 17.'''
# def f(n):
#     if n==10:
#         return 1
#     if n>10:
#         return 0
#     return f(n+1)+f(n*2)
# s1=f(1)
# print(s1)
# def f1(n):
#     if n==35:
#         return 1
#     if n>35 or n==17:
#         return 0
#     return f1(n+1)+f1(n*2)
# s2=f1(10)
# print(s2)
#
#
# '''Задание 23 (№10104).
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которые
# обозначены латинскими буквами:
# A. Прибавить 1
# B. Умножить на 2
# C. Возвести в квадрат
# Программа для исполнителя – это последовательность команд.
# Сколько существует программ, для которых при исходном числе 2  результатом
# является число 20, при этом траектория вычислений не содержит числа 11?
# Траектория вычислений программы – это последовательность
# результатов выполнения всех команд программы. Например, для программы CBA при
# исходном числе 4 траектория будет состоять из чисел 16, 32, 33.
# '''
# def f(n):
#     if n==20:
#         return 1
#     if n>20 or n==11:
#         return 0
#     return f(n+1)+f(n*2)+f(n*n)
# print(f(2))
#
# '''Задание 19 (№10102).
# Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней.
# Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в
# кучу один камень или увеличить количество камней в куче в два раза. Для того чтобы
# делать ходы, у каждого игрока есть неограниченное количество камней.
# Игра завершается в тот момент, когда количество камней в куче становится не менее
# 129. Победителем считается игрок, сделавший последний ход, т.е. первым получивший
# кучу из 129 или больше камней.
# В начальный момент в куче было S камней, 1 ≤ S ≤ 128.
# Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при
# любых ходах противника.
# Укажите минимальное значение S, при котором Петя не может выиграть за один ход, но
# при любом ходе Пети Ваня может выиграть своим первым ходом.
# '''
# print("задание 19")
# def game(s,n):
#     if s>=129 or n>2:
#         return n==2
#     if n%2==0:
#         return game(s+1,n+1) and game(s*2,n+1)
#     return game(s + 1, n + 1) or game(s * 2, n + 1)
#
# for i in range(1,129):
#     if game(i,0):
#         print(i)
# '''Задание 20 .
# Для игры, описанной в задании 19, найдите
# два наименьших значения S,  при которых у
# Пети есть выигрышная стратегия, причём
# одновременно выполняются два условия:
# – Петя не может выиграть за один ход;
# – Петя может выиграть своим вторым ходом
# независимо от того, как будет ходить Ваня.
# Найденные значения запишите в ответе в
# порядке возрастания.
# '''
# print("задание 20")
# def game(s,n):
#     if s>=129 or n>3:
#         return n==3
#     if n%2!=0:
#         return game(s+1,n+1) and game(s*2,n+1)
#     return game(s + 1, n + 1) or game(s * 2, n + 1)
#
# for i in range(1,129):
#     if game(i,0):
#         print(i)
# '''Задание 21 .
# Для игры, описанной в задании 19, найдите минимальное значение S,  при котором
# одновременно выполняются два условия:
# – у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым
# ходом при любой игре Пети;
# – у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
# Если найдено несколько значений S, в ответе запишите минимальное из них'''
# print("задание 21")
# def game(s,n):
#     if s>=129 or n>4:
#         return n==4 or n==2
#     if n%2==0:
#         return game(s+1,n+1) and game(s*2,n+1)
#     return game(s + 1, n + 1) or game(s * 2, n + 1)
#
# for i in range(1,129):
#     if game(i,0):
#         print(i)
# Убрать ответы выповшие в звдвнии19

# import sys
# sys.setrecursionlimit(100000)
# def f(n):
#     if n==1:
#         return 1
#     if n>1:
#         return n*f(n-1)
#
#
#
# print(f(2023))
# s = input()
# n = int(input())
# fasting = 0
# pensl = 0
# shiling = 0
# funt = 0
#
# if s == 'фартинг':
#     pensl = n // 4
#     fasting = n % 4
#     if pensl >= 12:
#         shiling = pensl // 12
#         pensl = pensl % 12
#         if shiling >= 20:
#             funt = shiling // 20
#             shiling = shiling % 20
# if s == 'пенс':
#     if n >= 12:
#         shiling = n // 12
#         pensl = n % 12
#         if shiling >= 20:
#             funt = shiling // 20
#             shiling = shiling % 20
# if funt > 0:
#     print(f'Фунтов: {funt}')
# if shiling > 0:
#     print(f'Шиллингов: {shiling}')
# if pensl > 0:
#     print(f'Пенсов: {pensl}')
# if fasting > 0:
#     print(f'Фартингов: {fasting}')
# n = int(input())
# x = float(input())
# # print((-1) ** (n - 1) * (x ** (2 * n - 1) / (2 * n - 1)))
# a = 6
# b = 3
# c = 9
# if c>= a or b <a:
# print(a)
# s = input()
# d = {}
# max_count = 0
# most_frequent = ''
#
#
# for char in s:
#     if char!=' ':
#         if char not in d:
#             d[char] = 0
#         d[char] += 1
#         max_count = max(max_count, d[char])
#
#
# l=[]
# for key, value in d.items():
#     if value == max_count:
#         l.append(key)
#         #most_frequent += key
# l.sort()
# for i in l:
#     most_frequent+=''.join(i)
# print(max_count)
# #print(l)
# print(most_frequent)
# n = int(input())
# l = [1, 1, 1]
#
# for i in range(3, n):
#     l.append(l[i - 1] + l[i - 2] + l[i - 3])
#
# print(' '.join(str(x) for x in l))
# a = int(input())
# b = int(input())
# print([i ** 2 vfor i in range(a, b + 1)])
# n = int(input())  # 1693
# a4 = n % 10
# a3 = n // 10 % 10
# a2 = n // 100 % 10
# a1 = n // 1000
# # print(a4 * 1000 + a3 * 100 + a2 * 10 + a1)
# print(f'{a4}{a3}{a2}{a1}')



# Урок по изучению оператора if
'''# Задача:
Предположим, у нас есть программа, которая проверяет возраст пользователя и определяет, 
может ли он голосовать на выборах. В России право голоса предоставляется гражданам старше 18 лет.
'''
#
# age = int(input("Введите ваш возраст: "))
# print(age>=18)
# if (age>=18):
#     print("Вы можете голосовать!")
#     #print("Сделайте осознаный выбор!")
# else:
#     print("К сожалению, вы ещё слишком молоды для голосования.")
#
# age = int(input("Введите ваш возраст: "))
# if age >= 18:
#     print("Вы можете водить автомобиль и мотоцикл.")
# elif age >= 16:
#     print("Вы можете водить мотоцикл, но не автомобиль.")
# else:
#     print("К сожалению, вы ещё слишком молоды для вождения.")
#
# age = int(input("Введите ваш возраст: "))
# if age <= 0:
#     print("Возраст не может быть отрицательным или нулевым.")
# elif age < 13:# (age < 13) and (age > 0)
#     print("Ребёнок")
# elif age < 18: # (age >= 13) and (age < 18)
#     print("Подросток")
# elif age < 60: # (age >= 18) and (age < 60)
#     print("Взрослый")
# else:
#     print("Пожилой человек")

# Урок по изучению оператора if

'''Предположим, у нас есть программа, которая проверяет возраст пользователя и определяет, 
может ли он голосовать на выборах. В России право голоса предоставляется гражданам старше 18 лет.
'''
# age = int(input("Введите ваш возраст: "))
# print(age >= 18)
# if (age >= 18):
#     print("Вы можете голосовать!")
#     print('Делайте правилиный выбор')
# else:
#     print("К сожалению, вы ещё слишком молоды для голосования.")

# двузначное число n>9 b n<100
# n=int(input('Введите число: '))
# print(n>9 and n<100)
# if n>9 and n<100:
#     print('Двухзначное')
# else:
#     print('не Двухзначное')

# определение четности
# n=int(input('Введите число: '))
# if abs(n)%2==0:
#     print('число четное')
# else:
#     print('число не четное')

# Задача 4: Проверка года на високосность
# year = int(input("Введите год: "))
# if year%4==0 and year%100!=0:
#     print('год високосный')
# else:
#     print('год не високосный')


# Урок по изучению оператора if
'''Предположим, у нас есть программа, которая проверяет возраст пользователя 
и определяет, может ли он голосовать на выборах. В России право голоса 
предоставляется гражданам старше 18 лет.
'''
# age = int(input("Введите ваш возраст: "))
# print(age>=18)
# if (age>=18):
#     print("Вы можете голосовать!")
#     print('Делай правильный выбор')
# else:
#     print("К сожалению, вы ещё слишком молоды для голосования.")

# # Двузначное число и заканчивается на 5 n>9 и n<100
# n=int(input("Введите число: "))
# #print('n>9=',n>9,', n<100=',n<100,', n>9 and n<100=',n>9 and n<100)
# if (n>9 and n<100 and n%10==5):
#     print('двухзначное и заканчивается на 5')
# else:
#     print('не двухзначное')

# провкрка числа на четность
# n=int(input("Введите число: "))
# if n%2==0:  #==4 or n==8 or n==100
#     print('четное')
# else:
#     print('не четное')
#
# age = int(input("Введите ваш возраст: "))
# if age < 0:
#     print("Возраст не может быть отрицательным")
# elif age < 2: #  0<=age<2
#     print("Младенец")
# elif age < 13: #  2<=age<13
#     print("Ребенок")
# elif age < 20:  #  13<=age<20
#     print("Подросток")
# elif age < 60: # 20<=age<60
#     print('Взрослый')
# else:  # 60 и больше
#     print('Пожилой')



# Урок по изучению оператора if

'''Предположим, у нас есть программа, которая проверяет возраст пользователя и определяет, 
может ли он голосовать на выборах. В России право голоса предоставляется 
гражданам старше 18 лет.
'''
# age = int(input("Введите ваш возраст: "))
# print(age>=18)
# if (age>=18):
#     print("Вы можете голосовать!")
#     print('Делайте правилиный выбор')
# else:
#     print("К сожалению, вы ещё слишком молоды для голосования.")

# двузначное число n>=10 И n<=99 и заканчивается на 5
# n=int(input('Введите число: '))
# if n>=10 and n<=99 and n%10==5:
#     print('Двухзначное и зананчиваетс на 5')
# else:
#     print('не двухзначное')

# определение четности
# n=int(input('Введите число: '))
# if n%2==0:
#     print('число четное')
# else:
#     print('число не четное')

# возраст человека
age = int(input("Введите ваш возраст: "))

if age <= 0:
    print("Возраст не может быть отрицательным или нулевым.")
elif age < 13: #  1<=age <13
    print("Ребёнок")
elif age < 18: #13<=age <18
    print("Подросток")
elif age < 60: #18<=age <60
    print("Взрослый")
else:
    print("Пожилой человек")






















